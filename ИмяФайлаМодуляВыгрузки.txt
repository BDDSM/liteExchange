#Область СтандартныеПеременныеИФункции
Перем ОбработкаВыполненаУспешно Экспорт;
Перем ОписаниеОшибки Экспорт;
Перем ВходящиеДанные Экспорт;
Перем ПараметрыЗапроса Экспорт;
Перем ЗаголовкиЗапроса Экспорт;
Перем ПараметрыУРЛ Экспорт;

Функция ВыполнитьОбработкуПриложения() Экспорт
	Источник = ВходящиеДанные;
	ВозвращаемыеДанные = Новый Структура;
	Если ТипЗнч(Источник) = Тип("СправочникСсылка.Организации") Тогда
		ВозвращаемыеДанные.Добавить(ВыгрузитьОрганизации(Источник));
	КонецЕсли;

	Если ТипЗнч(Источник) = Тип("ПеречислениеСсылка.СтавкиНДС") Тогда
		ВозвращаемыеДанные.Добавить(ВыгрузитьСтавкиНДС(Источник));
	КонецЕсли;

	Если ТипЗнч(Источник) = Тип("СправочникСсылка.МОЛ_ЕдиницыИзмерений") Тогда
		ВозвращаемыеДанные.Добавить(ВыгрузитьусЕдиницыХранения(Источник));
	КонецЕсли;

	Если ТипЗнч(Источник) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ВозвращаемыеДанные.Добавить(ВыгрузитьусЗаказНаОтгрузку_ПеремещенениеТоваров(Источник));
	КонецЕсли;

	Если ТипЗнч(Источник) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
		ВозвращаемыеДанные.Добавить(ВыгрузитьусКлассыЕдиницХранения(Источник));
	КонецЕсли;

	Если ТипЗнч(Источник) = Тип("СправочникСсылка.Номенклатура") Тогда
		ВозвращаемыеДанные.Добавить(ВыгрузитьусНоменклатура(Источник));
	КонецЕсли;

	Если ТипЗнч(Источник) = Тип("СправочникСсылка.Склады") Тогда
		ВозвращаемыеДанные.Добавить(ВыгрузитьусСклады(Источник));
	КонецЕсли;

	Если ТипЗнч(Источник) = Тип("РегистрСведенийЗапись.ШтрихкодыНоменклатуры") Тогда
		ВозвращаемыеДанные.Добавить(ВыгрузитьусШтрихКодыТоваров(Источник));
	КонецЕсли;

	Если ТипЗнч(Источник) = Тип("ПеречислениеСсылка.ЮридическоеФизическоеЛицо") Тогда
		ВозвращаемыеДанные.Добавить(ВыгрузитьЮрФизЛицо(Источник));
	КонецЕсли;

	Возврат ВозвращаемыеДанные;
КонецФункции
#КонецОбласти

Функция ВыгрузитьОрганизации(Источник)
	ДанныеИсточника = Новый Структура;
	ДанныеИсточника.Вставить("ТипПриемника", "СправочникСсылка.усКонтрагенты")
	Отказ = Ложь;

	Значение = ПолучитьЗначениеСвойства1Организации(Источник, "Код"); //Код --> Код
	ДанныеИсточника.Вставить("Код", Значение);

	Значение = ПолучитьЗначениеСвойства2Организации(Источник, "ИНН"); //ИНН --> ИНН
	ДанныеИсточника.Вставить("ИНН", Значение);

	Значение = ПолучитьЗначениеСвойства3Организации(Источник, "КПП"); //КПП --> КПП
	ДанныеИсточника.Вставить("КПП", Значение);

	Значение = ПолучитьЗначениеСвойства4Организации(Источник, "ОсновнойБанковскийСчет"); //ОсновнойБанковскийСчет --> ОсновнойБанковскийСчет
	ДанныеИсточника.Вставить("ОсновнойБанковскийСчет", Значение);

	Значение = ПолучитьЗначениеСвойства5Организации(Источник, "Наименование"); //Наименование --> Наименование
	ДанныеИсточника.Вставить("Наименование", Значение);

	Значение = ПолучитьЗначениеСвойства6Организации(Источник, "ПометкаУдаления"); //ПометкаУдаления --> ПометкаУдаления
	ДанныеИсточника.Вставить("ПометкаУдаления", Значение);

	Значение = ПолучитьЗначениеСвойства7Организации(Источник, "КодПоОКПО"); //КодПоОКПО --> ОКПО
	ДанныеИсточника.Вставить("ОКПО", Значение);

	Значение = ПолучитьЗначениеСвойства8Организации(Источник, "НаименованиеПолное"); //НаименованиеПолное --> ПолноеНаименование
	ДанныеИсточника.Вставить("ПолноеНаименование", Значение);

	Значение = ПолучитьЗначениеСвойства9Организации(Источник, "ЮридическоеФизическоеЛицо"); //ЮридическоеФизическоеЛицо --> ЮрФизЛицо
	ДанныеИсточника.Вставить("ЮрФизЛицо", Значение);

	Значение = ПолучитьЗначениеСвойства10Организации(Источник, ""); //--> СобственнаяОрганизация
	ДанныеИсточника.Вставить("СобственнаяОрганизация", Значение);

	Возврат ДанныеИсточника
КонецФункции

Функция ПолучитьЗначениеСвойства1Организации(Источник, ИмяРеквизита) //Код --> Код
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Код --> Код

Функция ПолучитьЗначениеСвойства2Организации(Источник, ИмяРеквизита) //ИНН --> ИНН
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ИНН --> ИНН

Функция ПолучитьЗначениеСвойства3Организации(Источник, ИмяРеквизита) //КПП --> КПП
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //КПП --> КПП

Функция ПолучитьЗначениеСвойства4Организации(Источник, ИмяРеквизита) //ОсновнойБанковскийСчет --> ОсновнойБанковскийСчет
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ОсновнойБанковскийСчет --> ОсновнойБанковскийСчет

Функция ПолучитьЗначениеСвойства5Организации(Источник, ИмяРеквизита) //Наименование --> Наименование
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Наименование --> Наименование

Функция ПолучитьЗначениеСвойства6Организации(Источник, ИмяРеквизита) //ПометкаУдаления --> ПометкаУдаления
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ПометкаУдаления --> ПометкаУдаления

Функция ПолучитьЗначениеСвойства7Организации(Источник, ИмяРеквизита) //КодПоОКПО --> ОКПО
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //КодПоОКПО --> ОКПО

Функция ПолучитьЗначениеСвойства8Организации(Источник, ИмяРеквизита) //НаименованиеПолное --> ПолноеНаименование
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //НаименованиеПолное --> ПолноеНаименование

Функция ПолучитьЗначениеСвойства9Организации(Источник, ИмяРеквизита) //ЮридическоеФизическоеЛицо --> ЮрФизЛицо
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ЮридическоеФизическоеЛицо --> ЮрФизЛицо

Функция ПолучитьЗначениеСвойства10Организации(Источник, ИмяРеквизита) //--> СобственнаяОрганизация
	Значение = Неопределено;
	Отказ = Ложь;
	Значение = Истина;;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> СобственнаяОрганизация


Функция ВыгрузитьСтавкиНДС(Источник)
	ДанныеИсточника = Новый Структура;
	ДанныеИсточника.Вставить("ТипПриемника", "ПеречислениеСсылка.СтавкиНДС")
	Отказ = Ложь;
	Возврат ДанныеИсточника
КонецФункции

Функция ВыгрузитьусЕдиницыХранения(Источник)
	ДанныеИсточника = Новый Структура;
	ДанныеИсточника.Вставить("ТипПриемника", "СправочникСсылка.усЕдиницыХранения")
	Отказ = Ложь;

	Значение = ПолучитьЗначениеСвойства1усЕдиницыХранения(Источник, "Код"); //Код --> Код
	ДанныеИсточника.Вставить("Код", Значение);

	Значение = ПолучитьЗначениеСвойства2усЕдиницыХранения(Источник, "Владелец"); //Владелец --> Владелец
	ДанныеИсточника.Вставить("Владелец", Значение);

	Значение = ПолучитьЗначениеСвойства3усЕдиницыХранения(Источник, "Вес"); //Вес --> Вес
	ДанныеИсточника.Вставить("Вес", Значение);

	Значение = ПолучитьЗначениеСвойства4усЕдиницыХранения(Источник, "бит_КоэффициентДляСклада"); //бит_КоэффициентДляСклада --> Коэффициент
	ДанныеИсточника.Вставить("Коэффициент", Значение);

	Значение = ПолучитьЗначениеСвойства5усЕдиницыХранения(Источник, "Наименование"); //Наименование --> Наименование
	ДанныеИсточника.Вставить("Наименование", Значение);

	Значение = ПолучитьЗначениеСвойства6усЕдиницыХранения(Источник, "ПометкаУдаления"); //ПометкаУдаления --> ПометкаУдаления
	ДанныеИсточника.Вставить("ПометкаУдаления", Значение);

	Значение = ПолучитьЗначениеСвойства7усЕдиницыХранения(Источник, "КлассификаторЕдиницИзмерения"); //КлассификаторЕдиницИзмерения --> КлассЕдиницыХранения
	ДанныеИсточника.Вставить("КлассЕдиницыХранения", Значение);

	Значение = ПолучитьЗначениеСвойства8усЕдиницыХранения(Источник, ""); //--> МодельСкладскогоУчета
	ДанныеИсточника.Вставить("МодельСкладскогоУчета", Значение);

	Значение = ПолучитьЗначениеСвойства9усЕдиницыХранения(Источник, "Коэффициент"); //Коэффициент --> КоэффициентКИС
	ДанныеИсточника.Вставить("КоэффициентКИС", Значение);

	Значение = ПолучитьЗначениеСвойства10усЕдиницыХранения(Источник, ""); //--> Родитель
	ДанныеИсточника.Вставить("Родитель", Значение);

	Значение = ПолучитьЗначениеСвойства11усЕдиницыХранения(Источник, ""); //--> АктивнаяОбластьОтбора
	ДанныеИсточника.Вставить("АктивнаяОбластьОтбора", Значение);

	Значение = ПолучитьЗначениеСвойства12усЕдиницыХранения(Источник, ""); //--> АнализСоставаПриРазмещении
	ДанныеИсточника.Вставить("АнализСоставаПриРазмещении", Значение);

	Значение = ПолучитьЗначениеСвойства13усЕдиницыХранения(Источник, ""); //--> МетодОтбораПоДатам
	ДанныеИсточника.Вставить("МетодОтбораПоДатам", Значение);

	Значение = ПолучитьЗначениеСвойства14усЕдиницыХранения(Источник, ""); //--> ОбластьРазмещения
	ДанныеИсточника.Вставить("ОбластьРазмещения", Значение);

	Значение = ПолучитьЗначениеСвойства15усЕдиницыХранения(Источник, ""); //--> ОтборПоДатам
	ДанныеИсточника.Вставить("ОтборПоДатам", Значение);

	Значение = ПолучитьЗначениеСвойства16усЕдиницыХранения(Источник, ""); //--> РазрешитьОтборИзЗоныПриемки
	ДанныеИсточника.Вставить("РазрешитьОтборИзЗоныПриемки", Значение);

	Значение = ПолучитьЗначениеСвойства17усЕдиницыХранения(Источник, ""); //--> РазрешитьОтборИзРезервнойЗоны
	ДанныеИсточника.Вставить("РазрешитьОтборИзРезервнойЗоны", Значение);

	Возврат ДанныеИсточника
КонецФункции

Функция ПолучитьЗначениеСвойства1усЕдиницыХранения(Источник, ИмяРеквизита) //Код --> Код
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Код --> Код

Функция ПолучитьЗначениеСвойства2усЕдиницыХранения(Источник, ИмяРеквизита) //Владелец --> Владелец
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Владелец --> Владелец

Функция ПолучитьЗначениеСвойства3усЕдиницыХранения(Источник, ИмяРеквизита) //Вес --> Вес
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Вес --> Вес

Функция ПолучитьЗначениеСвойства4усЕдиницыХранения(Источник, ИмяРеквизита) //бит_КоэффициентДляСклада --> Коэффициент
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //бит_КоэффициентДляСклада --> Коэффициент

Функция ПолучитьЗначениеСвойства5усЕдиницыХранения(Источник, ИмяРеквизита) //Наименование --> Наименование
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Наименование --> Наименование

Функция ПолучитьЗначениеСвойства6усЕдиницыХранения(Источник, ИмяРеквизита) //ПометкаУдаления --> ПометкаУдаления
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ПометкаУдаления --> ПометкаУдаления

Функция ПолучитьЗначениеСвойства7усЕдиницыХранения(Источник, ИмяРеквизита) //КлассификаторЕдиницИзмерения --> КлассЕдиницыХранения
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //КлассификаторЕдиницИзмерения --> КлассЕдиницыХранения

Функция ПолучитьЗначениеСвойства8усЕдиницыХранения(Источник, ИмяРеквизита) //--> МодельСкладскогоУчета
	Значение = Неопределено;
	Отказ = Ложь;
	//Модель учета сроков годности;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> МодельСкладскогоУчета

Функция ПолучитьЗначениеСвойства9усЕдиницыХранения(Источник, ИмяРеквизита) //Коэффициент --> КоэффициентКИС
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Коэффициент --> КоэффициентКИС

Функция ПолучитьЗначениеСвойства10усЕдиницыХранения(Источник, ИмяРеквизита) //--> Родитель
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> Родитель

Функция ПолучитьЗначениеСвойства11усЕдиницыХранения(Источник, ИмяРеквизита) //--> АктивнаяОбластьОтбора
	Значение = Неопределено;
	Отказ = Ложь;
	//Основная область отбора;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> АктивнаяОбластьОтбора

Функция ПолучитьЗначениеСвойства12усЕдиницыХранения(Источник, ИмяРеквизита) //--> АнализСоставаПриРазмещении
	Значение = Неопределено;
	Отказ = Ложь;
	//Без анализа;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> АнализСоставаПриРазмещении

Функция ПолучитьЗначениеСвойства13усЕдиницыХранения(Источник, ИмяРеквизита) //--> МетодОтбораПоДатам
	Значение = Неопределено;
	Отказ = Ложь;
	Значение = "ПоВозрастаниюДат";;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> МетодОтбораПоДатам

Функция ПолучитьЗначениеСвойства14усЕдиницыХранения(Источник, ИмяРеквизита) //--> ОбластьРазмещения
	Значение = Неопределено;
	Отказ = Ложь;
	//Основная область размещения;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> ОбластьРазмещения

Функция ПолучитьЗначениеСвойства15усЕдиницыХранения(Источник, ИмяРеквизита) //--> ОтборПоДатам
	Значение = Неопределено;
	Отказ = Ложь;
	Значение = "СрокГодности";;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> ОтборПоДатам

Функция ПолучитьЗначениеСвойства16усЕдиницыХранения(Источник, ИмяРеквизита) //--> РазрешитьОтборИзЗоныПриемки
	Значение = Неопределено;
	Отказ = Ложь;
	Значение = Истина;;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> РазрешитьОтборИзЗоныПриемки

Функция ПолучитьЗначениеСвойства17усЕдиницыХранения(Источник, ИмяРеквизита) //--> РазрешитьОтборИзРезервнойЗоны
	Значение = Неопределено;
	Отказ = Ложь;
	Значение = Истина;;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> РазрешитьОтборИзРезервнойЗоны


Функция ВыгрузитьусЗаказНаОтгрузку_ПеремещенениеТоваров(Источник)
	ДанныеИсточника = Новый Структура;
	ДанныеИсточника.Вставить("ТипПриемника", "ДокументСсылка.усЗаказНаОтгрузку")
	Отказ = Ложь;

	Значение = ПолучитьЗначениеСвойства1усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "Номер"); //Номер --> НомерЗаявкиКИС
	ДанныеИсточника.Вставить("НомерЗаявкиКИС", Значение);

	Значение = ПолучитьЗначениеСвойства2усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "Организация"); //Организация --> Организация
	ДанныеИсточника.Вставить("Организация", Значение);

	Значение = ПолучитьЗначениеСвойства3усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "Дата"); //Дата --> ДатаЗаявкиКИС
	ДанныеИсточника.Вставить("ДатаЗаявкиКИС", Значение);

	Значение = ПолучитьЗначениеСвойства4усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ""); //--> Проведен
	ДанныеИсточника.Вставить("Проведен", Значение);

	Значение = ПолучитьЗначениеСвойства5усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "Комментарий"); //Комментарий --> Комментарии
	ДанныеИсточника.Вставить("Комментарии", Значение);

	Значение = ПолучитьЗначениеСвойства6усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "СкладОтправитель"); //СкладОтправитель --> Склад
	ДанныеИсточника.Вставить("Склад", Значение);

	Значение = ПолучитьЗначениеСвойства7усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ""); //--> ВидДокумента
	ДанныеИсточника.Вставить("ВидДокумента", Значение);

	Значение = ПолучитьЗначениеСвойства8усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ""); //--> ЭР_Операция
	ДанныеИсточника.Вставить("ЭР_Операция", Значение);

	Значение = ПолучитьЗначениеСвойства9усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ""); //--> Менеджер
	ДанныеИсточника.Вставить("Менеджер", Значение);

	Значение = ПолучитьЗначениеГруппыСвойств10усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "Товары"); //Товары --> Товары
	ДанныеИсточника.Вставить("Товары", Значение);




	Значение = ПолучитьЗначениеСвойства14усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "ПометкаУдаления"); //ПометкаУдаления --> ПометкаУдаления
	ДанныеИсточника.Вставить("ПометкаУдаления", Значение);

	Значение = ПолучитьЗначениеСвойства15усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "Организация"); //Организация --> Контрагент
	ДанныеИсточника.Вставить("Контрагент", Значение);

	Значение = ПолучитьЗначениеСвойства16усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ""); //--> Приоритет
	ДанныеИсточника.Вставить("Приоритет", Значение);





	Возврат ДанныеИсточника
КонецФункции

Функция ПолучитьЗначениеСвойства1усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //Номер --> НомерЗаявкиКИС
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Номер --> НомерЗаявкиКИС

Функция ПолучитьЗначениеСвойства2усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //Организация --> Организация
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Организация --> Организация

Функция ПолучитьЗначениеСвойства3усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //Дата --> ДатаЗаявкиКИС
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Дата --> ДатаЗаявкиКИС

Функция ПолучитьЗначениеСвойства4усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //--> Проведен
	Значение = Неопределено;
	Отказ = Ложь;
	Значение = Ложь;;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> Проведен

Функция ПолучитьЗначениеСвойства5усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //Комментарий --> Комментарии
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Комментарий --> Комментарии

Функция ПолучитьЗначениеСвойства6усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //СкладОтправитель --> Склад
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //СкладОтправитель --> Склад

Функция ПолучитьЗначениеСвойства7усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //--> ВидДокумента
	Значение = Неопределено;
	Отказ = Ложь;
	Значение = "ПеремещениеТоваров";;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> ВидДокумента

Функция ПолучитьЗначениеСвойства8усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //--> ЭР_Операция
	Значение = Неопределено;
	Отказ = Ложь;
	Если Источник.СкладПолучатель.Код = "М0013" Тогда //переделать под текущий код склада БП 3.0	
	 Значение = "ПФ_ПроизводствоПолуфабрикат"; 	
Иначе	
	 Значение = "СП_ПеремещениеСПБ";	
КонецЕсли;;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> ЭР_Операция

Функция ПолучитьЗначениеСвойства9усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //--> Менеджер
	Значение = Неопределено;
	Отказ = Ложь;
	Если ЗначениеЗаполнено(Источник.Ответственный) Тогда
	
	Значение = Источник.Ответственный.Наименование;
	
КонецЕсли;;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> Менеджер

Функция ПолучитьЗначениеГруппыСвойств10усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //Товары --> Товары
	Строки = Новый Массив;
	Строка = Новый Структура;
	Для Каждого ОбъектКоллекции Из Источник[ИмяРеквизита] Цикл
		Значение = ПолучитьЗначениеСвойстваОбъектаКоллекции11усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "Количество", ОбъектКоллекции); //Количество --> Количество
		Строка.Вставить("Количество", Значение);
		Значение = ПолучитьЗначениеСвойстваОбъектаКоллекции12усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "Номенклатура", ОбъектКоллекции); //Номенклатура --> Номенклатура
		Строка.Вставить("Номенклатура", Значение);
		Значение = ПолучитьЗначениеСвойстваОбъектаКоллекции13усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "Цена", ОбъектКоллекции); //Цена --> Цена
		Строка.Вставить("Цена", Значение);
		Значение = ПолучитьЗначениеСвойстваОбъектаКоллекции17усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "ЕдиницаИзмерения", ОбъектКоллекции); //ЕдиницаИзмерения --> ЕдиницаХранения
		Строка.Вставить("ЕдиницаХранения", Значение);
		Значение = ПолучитьЗначениеСвойстваОбъектаКоллекции18усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "", ОбъектКоллекции); //--> Качество
		Строка.Вставить("Качество", Значение);
		Значение = ПолучитьЗначениеСвойстваОбъектаКоллекции19усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "", ОбъектКоллекции); //--> СрокГодности
		Строка.Вставить("СрокГодности", Значение);
		Значение = ПолучитьЗначениеСвойстваОбъектаКоллекции20усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, "СтавкаНДСВРознице", ОбъектКоллекции); //СтавкаНДСВРознице --> СтавкаНДС
		Строка.Вставить("СтавкаНДС", Значение);
	    Строки.Добавить(Строка);
	КонецЦикла;
	Возврат Строки
КонецФункции

Функция ПолучитьЗначениеСвойстваОбъектаКоллекции11усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита, ОбъектКоллекции); //Количество --> Количество
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Количество --> Количество
Функция ПолучитьЗначениеСвойстваОбъектаКоллекции12усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита, ОбъектКоллекции); //Номенклатура --> Номенклатура
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Номенклатура --> Номенклатура
Функция ПолучитьЗначениеСвойстваОбъектаКоллекции13усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита, ОбъектКоллекции); //Цена --> Цена
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Цена --> Цена
Функция ПолучитьЗначениеСвойстваОбъектаКоллекции17усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита, ОбъектКоллекции); //ЕдиницаИзмерения --> ЕдиницаХранения
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ЕдиницаИзмерения --> ЕдиницаХранения
Функция ПолучитьЗначениеСвойстваОбъектаКоллекции18усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита, ОбъектКоллекции); //--> Качество
	Значение = Неопределено;
	Отказ = Ложь;
	Значение = "Кондиция";;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> Качество
Функция ПолучитьЗначениеСвойстваОбъектаКоллекции19усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита, ОбъектКоллекции); //--> СрокГодности
	Значение = Неопределено;
	Отказ = Ложь;
	Значение = Источник.Дата;;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> СрокГодности
Функция ПолучитьЗначениеСвойстваОбъектаКоллекции20усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита, ОбъектКоллекции); //СтавкаНДСВРознице --> СтавкаНДС
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //СтавкаНДСВРознице --> СтавкаНДС




Функция ПолучитьЗначениеСвойства14усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //ПометкаУдаления --> ПометкаУдаления
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ПометкаУдаления --> ПометкаУдаления

Функция ПолучитьЗначениеСвойства15усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //Организация --> Контрагент
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Организация --> Контрагент

Функция ПолучитьЗначениеСвойства16усЗаказНаОтгрузку_ПеремещенениеТоваров(Источник, ИмяРеквизита) //--> Приоритет
	Значение = Неопределено;
	Отказ = Ложь;
	Значение = "Обычный";;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> Приоритет






Функция ВыгрузитьусКлассыЕдиницХранения(Источник)
	ДанныеИсточника = Новый Структура;
	ДанныеИсточника.Вставить("ТипПриемника", "СправочникСсылка.усКлассыЕдиницХранения")
	Отказ = Ложь;

	Значение = ПолучитьЗначениеСвойства1усКлассыЕдиницХранения(Источник, "Код"); //Код --> Код
	ДанныеИсточника.Вставить("Код", Значение);

	Значение = ПолучитьЗначениеСвойства2усКлассыЕдиницХранения(Источник, "НаименованиеПолное"); //НаименованиеПолное --> НаименованиеПолное
	ДанныеИсточника.Вставить("НаименованиеПолное", Значение);

	Значение = ПолучитьЗначениеСвойства3усКлассыЕдиницХранения(Источник, "Наименование"); //Наименование --> Наименование
	ДанныеИсточника.Вставить("Наименование", Значение);

	Значение = ПолучитьЗначениеСвойства4усКлассыЕдиницХранения(Источник, "ПометкаУдаления"); //ПометкаУдаления --> ПометкаУдаления
	ДанныеИсточника.Вставить("ПометкаУдаления", Значение);

	Возврат ДанныеИсточника
КонецФункции

Функция ПолучитьЗначениеСвойства1усКлассыЕдиницХранения(Источник, ИмяРеквизита) //Код --> Код
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Код --> Код

Функция ПолучитьЗначениеСвойства2усКлассыЕдиницХранения(Источник, ИмяРеквизита) //НаименованиеПолное --> НаименованиеПолное
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //НаименованиеПолное --> НаименованиеПолное

Функция ПолучитьЗначениеСвойства3усКлассыЕдиницХранения(Источник, ИмяРеквизита) //Наименование --> Наименование
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Наименование --> Наименование

Функция ПолучитьЗначениеСвойства4усКлассыЕдиницХранения(Источник, ИмяРеквизита) //ПометкаУдаления --> ПометкаУдаления
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ПометкаУдаления --> ПометкаУдаления


Функция ВыгрузитьусНоменклатура(Источник)
	ДанныеИсточника = Новый Структура;
	ДанныеИсточника.Вставить("ТипПриемника", "СправочникСсылка.усНоменклатура")
	Отказ = Ложь;
	//АлгоритмПередВыгрузкойОбъекта Начало
	Если Источник.ЭтоГруппа Тогда
	Отказ = Истина;
КонецЕсли;;
	//АлгоритмПередВыгрузкойОбъекта Начало
	Если Отказ Тогда
		Возврат Неопределено
	КонецЕсли;
	//АлгоритмПослеВыгрузкиОбъекта Начало
	Запрос = Новый Запрос(" 
|ВЫБРАТЬ
| ШтрихкодыНоменклатуры.Номенклатура,
| ШтрихкодыНоменклатуры.Активность,
| ШтрихкодыНоменклатуры.Штрихкод,
| ШтрихкодыНоменклатуры.бит_ЕдиницаИзмерения
|ИЗ
| РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
|ГДЕ
| ШтрихкодыНоменклатуры.Номенклатура = &Объект");

Запрос.УстановитьПараметр("Объект", Источник); 
Выборка = Запрос.Выполнить().Выбрать();
Пока Выборка.Следующий() Цикл
 ВыгрузитьПоПравилу(Выборка, , , , "усШтрихКодыТоваров");
КонецЦикла;;
	//АлгоритмПослеВыгрузкиОбъекта Конец
	Если Отказ Тогда
		Возврат Неопределено
	КонецЕсли;

	Значение = ПолучитьЗначениеСвойства1усНоменклатура(Источник, "Код"); //Код --> Код
	ДанныеИсточника.Вставить("Код", Значение);

	Значение = ПолучитьЗначениеСвойства2усНоменклатура(Источник, "ЭтоГруппа"); //ЭтоГруппа --> ЭтоГруппа
	ДанныеИсточника.Вставить("ЭтоГруппа", Значение);

	Значение = ПолучитьЗначениеСвойства3усНоменклатура(Источник, "Наименование"); //Наименование --> Наименование
	ДанныеИсточника.Вставить("Наименование", Значение);

	Значение = ПолучитьЗначениеСвойства4усНоменклатура(Источник, "ПометкаУдаления"); //ПометкаУдаления --> ПометкаУдаления
	ДанныеИсточника.Вставить("ПометкаУдаления", Значение);

	Значение = ПолучитьЗначениеСвойства5усНоменклатура(Источник, "Родитель"); //Родитель --> Родитель
	ДанныеИсточника.Вставить("Родитель", Значение);

	Значение = ПолучитьЗначениеСвойства6усНоменклатура(Источник, "Артикул"); //Артикул --> Артикул
	ДанныеИсточника.Вставить("Артикул", Значение);

	Значение = ПолучитьЗначениеСвойства7усНоменклатура(Источник, "Комментарий"); //Комментарий --> Комментарий
	ДанныеИсточника.Вставить("Комментарий", Значение);

	Значение = ПолучитьЗначениеСвойства8усНоменклатура(Источник, "ЕдиницаДляОтчетов"); //ЕдиницаДляОтчетов --> БазоваяЕдиницаХранения
	ДанныеИсточника.Вставить("БазоваяЕдиницаХранения", Значение);

	Значение = ПолучитьЗначениеСвойства9усНоменклатура(Источник, "ЕдиницаДляОтчетов"); //ЕдиницаДляОтчетов --> ЕдиницаХраненияОстатковКИС
	ДанныеИсточника.Вставить("ЕдиницаХраненияОстатковКИС", Значение);

	Значение = ПолучитьЗначениеСвойства10усНоменклатура(Источник, "ЕдМест"); //ЕдМест --> ЕдМест
	ДанныеИсточника.Вставить("", Значение);

	Возврат ДанныеИсточника
КонецФункции

Функция ПолучитьЗначениеСвойства1усНоменклатура(Источник, ИмяРеквизита) //Код --> Код
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Код --> Код

Функция ПолучитьЗначениеСвойства2усНоменклатура(Источник, ИмяРеквизита) //ЭтоГруппа --> ЭтоГруппа
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ЭтоГруппа --> ЭтоГруппа

Функция ПолучитьЗначениеСвойства3усНоменклатура(Источник, ИмяРеквизита) //Наименование --> Наименование
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Наименование --> Наименование

Функция ПолучитьЗначениеСвойства4усНоменклатура(Источник, ИмяРеквизита) //ПометкаУдаления --> ПометкаУдаления
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ПометкаУдаления --> ПометкаУдаления

Функция ПолучитьЗначениеСвойства5усНоменклатура(Источник, ИмяРеквизита) //Родитель --> Родитель
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Родитель --> Родитель

Функция ПолучитьЗначениеСвойства6усНоменклатура(Источник, ИмяРеквизита) //Артикул --> Артикул
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Артикул --> Артикул

Функция ПолучитьЗначениеСвойства7усНоменклатура(Источник, ИмяРеквизита) //Комментарий --> Комментарий
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Комментарий --> Комментарий

Функция ПолучитьЗначениеСвойства8усНоменклатура(Источник, ИмяРеквизита) //ЕдиницаДляОтчетов --> БазоваяЕдиницаХранения
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ЕдиницаДляОтчетов --> БазоваяЕдиницаХранения

Функция ПолучитьЗначениеСвойства9усНоменклатура(Источник, ИмяРеквизита) //ЕдиницаДляОтчетов --> ЕдиницаХраненияОстатковКИС
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ЕдиницаДляОтчетов --> ЕдиницаХраненияОстатковКИС

Функция ПолучитьЗначениеСвойства10усНоменклатура(Источник, ИмяРеквизита) //ЕдМест --> ЕдМест
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ЕдМест --> ЕдМест


Функция ВыгрузитьусСклады(Источник)
	ДанныеИсточника = Новый Структура;
	ДанныеИсточника.Вставить("ТипПриемника", "СправочникСсылка.усСклады")
	Отказ = Ложь;
	//АлгоритмПередВыгрузкойОбъекта Начало
	Если Источник.ЭтоГруппа Тогда
	Отказ = Истина;
КонецЕсли;;
	//АлгоритмПередВыгрузкойОбъекта Начало
	Если Отказ Тогда
		Возврат Неопределено
	КонецЕсли;

	Значение = ПолучитьЗначениеСвойства1усСклады(Источник, "Код"); //Код --> Код
	ДанныеИсточника.Вставить("Код", Значение);

	Значение = ПолучитьЗначениеСвойства2усСклады(Источник, "Наименование"); //Наименование --> Наименование
	ДанныеИсточника.Вставить("Наименование", Значение);

	Значение = ПолучитьЗначениеСвойства3усСклады(Источник, "ПометкаУдаления"); //ПометкаУдаления --> ПометкаУдаления
	ДанныеИсточника.Вставить("ПометкаУдаления", Значение);

	Возврат ДанныеИсточника
КонецФункции

Функция ПолучитьЗначениеСвойства1усСклады(Источник, ИмяРеквизита) //Код --> Код
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Код --> Код

Функция ПолучитьЗначениеСвойства2усСклады(Источник, ИмяРеквизита) //Наименование --> Наименование
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Наименование --> Наименование

Функция ПолучитьЗначениеСвойства3усСклады(Источник, ИмяРеквизита) //ПометкаУдаления --> ПометкаУдаления
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //ПометкаУдаления --> ПометкаУдаления


Функция ВыгрузитьусШтрихКодыТоваров(Источник)
	ДанныеИсточника = Новый Структура;
	ДанныеИсточника.Вставить("ТипПриемника", "РегистрСведенийЗапись.усШтрихКодыТоваров")
	Отказ = Ложь;

	Значение = ПолучитьЗначениеСвойства1усШтрихКодыТоваров(Источник, "Номенклатура"); //Номенклатура --> Номенклатура
	ДанныеИсточника.Вставить("Номенклатура", Значение);

	Значение = ПолучитьЗначениеСвойства2усШтрихКодыТоваров(Источник, "Активность"); //Активность --> Активность
	ДанныеИсточника.Вставить("Активность", Значение);

	Значение = ПолучитьЗначениеСвойства3усШтрихКодыТоваров(Источник, "Штрихкод"); //Штрихкод --> ШтрихКод
	ДанныеИсточника.Вставить("ШтрихКод", Значение);

	Значение = ПолучитьЗначениеСвойства4усШтрихКодыТоваров(Источник, "бит_ЕдиницаИзмерения"); //бит_ЕдиницаИзмерения --> ЕдиницаХранения
	ДанныеИсточника.Вставить("ЕдиницаХранения", Значение);

	Значение = ПолучитьЗначениеСвойства5усШтрихКодыТоваров(Источник, ""); //--> Качество
	ДанныеИсточника.Вставить("Качество", Значение);

	Возврат ДанныеИсточника
КонецФункции

Функция ПолучитьЗначениеСвойства1усШтрихКодыТоваров(Источник, ИмяРеквизита) //Номенклатура --> Номенклатура
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Номенклатура --> Номенклатура

Функция ПолучитьЗначениеСвойства2усШтрихКодыТоваров(Источник, ИмяРеквизита) //Активность --> Активность
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Активность --> Активность

Функция ПолучитьЗначениеСвойства3усШтрихКодыТоваров(Источник, ИмяРеквизита) //Штрихкод --> ШтрихКод
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //Штрихкод --> ШтрихКод

Функция ПолучитьЗначениеСвойства4усШтрихКодыТоваров(Источник, ИмяРеквизита) //бит_ЕдиницаИзмерения --> ЕдиницаХранения
	Значение = Неопределено;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //бит_ЕдиницаИзмерения --> ЕдиницаХранения

Функция ПолучитьЗначениеСвойства5усШтрихКодыТоваров(Источник, ИмяРеквизита) //--> Качество
	Значение = Неопределено;
	Отказ = Ложь;
	Значение = "Кондиция";;
	Возврат Значение;
	Если ЗначениеЗаполнено(Источник[ИмяРеквизита]) Тогда
		Возврат Источник[ИмяРеквизита];
	КонецЕсли;
	Возврат Значение;
КонецФункции //--> Качество


Функция ВыгрузитьЮрФизЛицо(Источник)
	ДанныеИсточника = Новый Структура;
	ДанныеИсточника.Вставить("ТипПриемника", "ПеречислениеСсылка.ЮрФизЛицо")
	Отказ = Ложь;
	Возврат ДанныеИсточника
КонецФункции

Функция ВыгрузитьПоПравилу(Выборка, Парам1, Парам2, Парам3, ИмяПравила)
	Если ТипЗнч(Выборка) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
		Выполнить("ИмяПравила(Выборка)")
	Иначе
	КонецЕсли
КонецФункции

ВозвращаемыеДанные = Новый Структура;